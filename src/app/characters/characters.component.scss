@use './../../variables.scss' as vars;

.search_bar {
    color: rgb(188, 188, 188);
    padding: 10px 43px 10px 15px;
    border: 2px solid #5f5f5f;
    border-radius: 25px;
    font-size: 20px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    background-color: #272727;
}

.no_character_found {
    color: white;
}

.clear_icon {
    svg {
        fill: grey;
    }
    &:hover {
        svg {
            fill: rgb(166, 166, 166);
        }
    }
    position: absolute;
    right: 8px;
    top: 55%;
    transform: translateY(-50%);
    font-size: 18px;
    background-color: transparent;
    border: none;
    cursor: pointer;
}

.search_button {
    cursor: pointer;
    border: 2px solid #5f5f5f;
    background-color: #272727;
    border-radius: 25px;
    height: 45px;
    width: 45px;
    svg {
        fill: grey;
    }

    &:hover {
        background-color: #464646;
        svg {
            fill: rgb(198, 198, 198);
        }
    }
}

.loading_chars {
    color: white;
    font-weight: 600;
    font-style: italic;
    text-align: center;
}

.spinner {
    width: 100px;
    height: 100px;
    border: 8px solid rgba(0, 0, 0, 0.1);
    border-top-color: #a1a1a1;
    border-radius: 50%;
    animation: spin 1s ease infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.card {
    padding: 20px;
    background-color: rgb(55, 55, 55);
    box-shadow: 0px 8px 250px rgba(0, 0, 0, 1.1);
    border-radius: 50px;
    border: 2px solid rgba(255, 255, 255, 0.1);
}

.characters_display {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(275px, 1fr));
    gap: 15px;
    scrollbar-width: thin;
    scrollbar-color: rgba(255, 255, 255, 0.5) transparent;
    margin: 0px 10px 15px 10px;
    padding: 10px 0;
    overflow: auto;
    
    --mask-height: 15px;
    mask-image: linear-gradient(
        to bottom,
        transparent,
        black var(--mask-height),
        black calc(100% - var(--mask-height)),
        transparent
    );
}

.character_name {
    color: white;
    text-transform: capitalize;
    padding: 2px 4px;
    font-size: 17px;
    overflow-wrap: break-word;
    max-width: 140px;
    text-align: center;
}

.vision_icon {
    height: 35px;
    width: 35px;
    position: relative;
    background-position: center;
    background-size: cover;
}

.gap5 {
    gap: 5px;
}

.character_modal{
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #272727;
    padding: 20px;
    border-radius: 15px;
    box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    width: 80%;
    max-width: 600px;
    color: white;
    overflow-y: auto;
    max-height: 90vh;
    &::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: -1;
    }
}

.character_icon {
    border-right: 2px gray solid;
}

.character_wrapper {
    border: 2px gray solid;
    border-radius: 15px;
    width: 260px;
    height: 80px;
    overflow: hidden;
    backdrop-filter: blur(5px);
    :hover {
        cursor: pointer;
    }

    $elements: (
        "GEO": (color: rgb(255, 205, 0), image: "GeoElement.webp"),
        "CRYO": (color: rgb(0, 238, 255), image: "CryoElement.webp"),
        "PYRO": (color: rgb(182, 0, 0), image: "PyroElement.webp"),
        "DENDRO": (color: rgb(0, 182, 9), image: "DendroElement.webp"),
        "ANEMO": (color: rgb(0, 182, 167), image: "AnemoElement.webp"),
        "HYDRO": (color: rgb(0, 94, 182), image: "HydroElement.webp"),
        "ELECTRO": (color: rgb(124, 0, 182), image: "ElectroElement.webp")
    );

    @each $element, $values in $elements {
        &.#{$element} {
            background: linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, map-get($values, color) 300%);

            .vision {
                background-image: url('./../../assets/img/Elements/#{map-get($values, image)}');
            }
        }
    }

    .vision {
        background-position: center;
        background-size: 75%;
        background-repeat: no-repeat;
        height: 100%;
        width: 75px;
        position: absolute;
        top: 0;
        right: -40px;
        filter: invert(30%);
    }
}

.character_lite_info_wrapper {
    border-top-right-radius: 15px;
    border-bottom-right-radius: 15px;
}

.filter-container {
    color: rgb(188, 188, 188);
    padding: 10px 15px;
    border: 2px solid #5f5f5f;
    border-radius: 25px;
    font-size: 20px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    background-color: #272727;
}

button {
    cursor: pointer;
}

.release_date {
    position: absolute;
    bottom: 0;
    font-size: 11px;
    font-style: italic;
    color: rgb(132 132 132);
}

.svg_button {
    background-color: transparent;
    border: none;
    border-radius: 15px;
    &:hover {
        background-color: rgb(75, 75, 75);
    }
    svg {
        cursor: pointer;
    }
}

.landscape {
    mask-image: linear-gradient(to left, #272727 80%, transparent 100%);
    img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-top-right-radius: 10px;
        border-bottom-right-radius: 10px;
    }
}